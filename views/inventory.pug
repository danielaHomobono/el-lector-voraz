extends layout

block content
  h1 Inventario
  
  if user && user.role === 'admin'
    .add-book-form
      h2 Agregar Nuevo Libro
      form#addBookForm(action="/api/products" method="POST")
        .form-group
          label(for="title") Título:
          input#title(type="text" name="title" required)
        
        .form-group
          label(for="author") Autor:
          input#author(type="text" name="author" required)
        
        .form-group
          label(for="isbn") ISBN:
          input#isbn(type="text" name="isbn" required)
        
        .form-group
          label(for="price") Precio:
          input#price(type="number" name="price" step="0.01" required)
        
        .form-group
          label(for="stock") Stock:
          input#stock(type="number" name="stock" required)
        
        .form-group
          label(for="category") Categoría:
          input#category(type="text" name="category" required)
        
        button(type="submit") Agregar Libro

      script.
        document.getElementById('addBookForm').addEventListener('submit', async (e) => {
          e.preventDefault();
          
          const formData = {
            title: document.getElementById('title').value,
            author: document.getElementById('author').value,
            isbn: document.getElementById('isbn').value,
            price: parseFloat(document.getElementById('price').value),
            stock: parseInt(document.getElementById('stock').value),
            category: document.getElementById('category').value,
            type: 'book'
          };

          try {
            const response = await fetch('/api/products', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify(formData)
            });

            if (response.ok) {
              alert('Libro agregado exitosamente');
              window.location.reload(); // Recargar la página para ver el nuevo libro
              document.getElementById('addBookForm').reset(); // Limpiar el formulario
            } else {
              const data = await response.json();
              alert('Error: ' + (data.error || 'Error al agregar el libro'));
            }
          } catch (error) {
            console.error('Error:', error);
            alert('Error al agregar el libro');
          }
        });

  .inventory-container
    .inventory-section
      h2 Libros
      if products && products.length > 0
        table(border='1')
          tr
            th Título
            th Autor
            th ISBN
            th Precio
            th Stock
          each product in products
            tr
              td= product.title
              td= product.author
              td= product.isbn
              td= product.price
              td= product.stock
      else
        p No hay libros en inventario.

    .inventory-section
      h2 Cafés
      if cafes && cafes.length > 0
        table(border='1')
          tr
            th Nombre
            th Categoría
            th Precio
            th Stock
          each cafe in cafes
            tr
              td= cafe.name
              td= cafe.category
              td= cafe.price
              td= cafe.stock
      else
        p No hay cafés en inventario.

  style.
    .inventory-container {
      display: flex;
      gap: 2rem;
      margin: 2rem 0;
    }
    
    .inventory-section {
      flex: 1;
      min-width: 0; /* Evita que las tablas se desborden */
    }
    
    .inventory-section table {
      width: 100%;
      border-collapse: collapse;
      margin-bottom: 1rem;
    }
    
    .inventory-section th,
    .inventory-section td {
      padding: 0.5rem;
      text-align: left;
    }
    
    .inventory-section h2 {
      margin-bottom: 1rem;
    }
    
    .add-book-form {
      margin-bottom: 2rem;
    }
    /* NUEVO: margen inferior para evitar que el footer tape contenido */
    main {
      margin-bottom: 6rem;
    }

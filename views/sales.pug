extends layout

block content
  h1 Historial de Ventas
  
  div(style="max-width: 1200px; margin: 0 auto; padding: 1rem;")
    // Filter section
    div(style="background: white; border-radius: 8px; box-shadow: 0 2px 8px rgba(0,0,0,0.1); padding: 1.5rem; margin-bottom: 2rem;")
      h3(style="margin-top: 0; margin-bottom: 1rem; color: var(--primary);") Filtrar Ventas
      div(style="display: flex; flex-wrap: wrap; gap: 1rem;")
        div(style="flex: 1; min-width: 200px;")
          label(style="display: block; margin-bottom: 0.5rem; font-weight: 500;") Desde
          input#dateFrom(type="date" style="width: 100%; padding: 0.75rem; border: 1px solid #ddd; border-radius: 8px;")
        
        div(style="flex: 1; min-width: 200px;")
          label(style="display: block; margin-bottom: 0.5rem; font-weight: 500;") Hasta
          input#dateTo(type="date" style="width: 100%; padding: 0.75rem; border: 1px solid #ddd; border-radius: 8px;")
        
        div(style="flex: 1; min-width: 200px;")
          label(style="display: block; margin-bottom: 0.5rem; font-weight: 500;") Canal
          select#channelFilter(style="width: 100%; padding: 0.75rem; border: 1px solid #ddd; border-radius: 8px; height: 42px; box-sizing: border-box;")
            option(value="") Todos
            option(value="tienda") Tienda
            option(value="web") Web
      
      div(style="margin-top: 1rem; display: flex; gap: 1rem;")
        button#applyFilter(style="padding: 0.75rem 1.5rem; background-color: var(--secondary); color: white; border: none; border-radius: 8px; cursor: pointer;") Aplicar Filtros
        button#resetFilter(style="padding: 0.75rem 1.5rem; background-color: var(--text-light); color: white; border: none; border-radius: 8px; cursor: pointer;") Limpiar Filtros
    
    // Summary cards
    if summary
      div(style="display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 1rem; margin-bottom: 2rem;")
        div(style="background: white; border-radius: 8px; box-shadow: 0 2px 8px rgba(0,0,0,0.1); padding: 1.5rem; text-align: center;")
          div(style="font-size: 0.9rem; color: var(--text-light);") Total Ventas
          div(style="font-size: 1.8rem; font-weight: 600; color: var(--primary); margin: 0.5rem 0;") #{summary.totalSales}
          
        div(style="background: white; border-radius: 8px; box-shadow: 0 2px 8px rgba(0,0,0,0.1); padding: 1.5rem; text-align: center;")
          div(style="font-size: 0.9rem; color: var(--text-light);") Ingresos Totales
          div(style="font-size: 1.8rem; font-weight: 600; color: var(--primary); margin: 0.5rem 0;") $#{summary.totalRevenue.toFixed(2)}
          
        div(style="background: white; border-radius: 8px; box-shadow: 0 2px 8px rgba(0,0,0,0.1); padding: 1.5rem; text-align: center;")
          div(style="font-size: 0.9rem; color: var(--text-light);") Productos Vendidos
          div(style="font-size: 1.8rem; font-weight: 600; color: var(--primary); margin: 0.5rem 0;") #{summary.totalItems}
          
        div(style="background: white; border-radius: 8px; box-shadow: 0 2px 8px rgba(0,0,0,0.1); padding: 1.5rem; text-align: center;")
          div(style="font-size: 0.9rem; color: var(--text-light);") Valor Promedio
          div(style="font-size: 1.8rem; font-weight: 600; color: var(--primary); margin: 0.5rem 0;") $#{summary.averageSaleValue.toFixed(2)}
    
    // Table container with horizontal scroll
    div(style="background: white; border-radius: 8px; box-shadow: 0 2px 8px rgba(0,0,0,0.1); padding: 1.5rem; margin-bottom: 2rem; overflow-x: auto; width: 100%;")
      table#salesTable(style="width: 100%; min-width: 900px; border-collapse: collapse;")
        thead(style="background-color: var(--primary); color: var(--highlight);")
          tr
            th(style="padding: 1rem; text-align: left; border-bottom: 1px solid rgba(0,0,0,0.05); width: 20%;") ID
            th(style="padding: 1rem; text-align: left; border-bottom: 1px solid rgba(0,0,0,0.05); width: 10%;") Fecha
            th(style="padding: 1rem; text-align: left; border-bottom: 1px solid rgba(0,0,0,0.05); width: 10%;") Total
            th(style="padding: 1rem; text-align: left; border-bottom: 1px solid rgba(0,0,0,0.05); width: 10%;") Canal
            th(style="padding: 1rem; text-align: left; border-bottom: 1px solid rgba(0,0,0,0.05); width: 35%;") Cliente
            th(style="padding: 1rem; text-align: left; border-bottom: 1px solid rgba(0,0,0,0.05); width: 15%;") Acciones
        tbody
          if sales && sales.length > 0
            each sale in sales
              tr(style="border-bottom: 1px solid rgba(0,0,0,0.05);")
                td(style="padding: 1rem; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;")= sale.id
                td(style="padding: 1rem; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;")= sale.date ? new Date(sale.date).toLocaleDateString() : (sale.createdAt ? new Date(sale.createdAt).toLocaleDateString() : 'N/A')
                td(style="padding: 1rem; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;")= sale.total ? `$${sale.total.toFixed(2)}` : '$0.00'
                td(style="padding: 1rem; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;")= sale.channel || 'N/A'
                td(style="padding: 1rem; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;")= sale.clientName || 'Sin cliente'
                td(style="padding: 1rem;")
                  button(
                    style="padding: 0.5rem 1rem; background-color: var(--accent); color: var(--primary); font-weight: bold; border: none; border-radius: 4px; cursor: pointer;"
                    onclick=`viewSaleDetails('${sale.id}')`
                  ) Ver Detalles
          else
            tr
              td(colspan="6" style="text-align: center; padding: 2rem; color: var(--text-light);") No hay ventas registradas.

  // Sale Details Modal
  div#saleModal(style="display: none; position: fixed; z-index: 1000; left: 0; top: 0; width: 100%; height: 100%; background-color: rgba(0,0,0,0.5); overflow: auto;")
    div(style="background-color: white; margin: 10% auto; padding: 2rem; border-radius: 8px; box-shadow: 0 2px 8px rgba(0,0,0,0.1); width: 90%; max-width: 600px; position: relative;")
      span.close-btn(style="position: absolute; top: 1rem; right: 1rem; color: var(--text-light); font-size: 1.5rem; font-weight: bold; cursor: pointer;") &times;
      h3(style="color: var(--primary); margin-top: 0; margin-bottom: 1.5rem; font-weight: 400; text-align: center;") Detalles de Venta
      
      div(style="margin-bottom: 1.5rem;")
        div(style="display: flex; flex-wrap: wrap; margin-bottom: 1rem;")
          div(style="flex: 1; min-width: 200px; margin-bottom: 1rem;")
            h4(style="margin: 0 0 0.5rem 0; color: var(--text-light); font-size: 0.9rem;") ID de Venta
            p#saleId(style="margin: 0; font-weight: 500;")
          
          div(style="flex: 1; min-width: 200px; margin-bottom: 1rem;")
            h4(style="margin: 0 0 0.5rem 0; color: var(--text-light); font-size: 0.9rem;") Fecha
            p#saleDate(style="margin: 0; font-weight: 500;")
        
        div(style="display: flex; flex-wrap: wrap; margin-bottom: 1rem;")
          div(style="flex: 1; min-width: 200px; margin-bottom: 1rem;")
            h4(style="margin: 0 0 0.5rem 0; color: var(--text-light); font-size: 0.9rem;") Total
            p#saleTotal(style="margin: 0; font-weight: 500;")
          
          div(style="flex: 1; min-width: 200px; margin-bottom: 1rem;")
            h4(style="margin: 0 0 0.5rem 0; color: var(--text-light); font-size: 0.9rem;") Canal
            p#saleChannel(style="margin: 0; font-weight: 500;")
        
        div(style="display: flex; flex-wrap: wrap; margin-bottom: 1rem;")
          div(style="flex: 1; min-width: 200px; margin-bottom: 1rem;")
            h4(style="margin: 0 0 0.5rem 0; color: var(--text-light); font-size: 0.9rem;") Cliente
            p#saleClient(style="margin: 0; font-weight: 500;")
          
          div(style="flex: 1; min-width: 200px; margin-bottom: 1rem;")
            h4(style="margin: 0 0 0.5rem 0; color: var(--text-light); font-size: 0.9rem;") Email
            p#saleClientEmail(style="margin: 0; font-weight: 500;")
        
        div(style="display: flex; flex-wrap: wrap; margin-bottom: 1rem;")
          div(style="flex: 1; min-width: 200px; margin-bottom: 1rem;")
            h4(style="margin: 0 0 0.5rem 0; color: var(--text-light); font-size: 0.9rem;") Puntos Cliente
            p#saleClientPoints(style="margin: 0; font-weight: 500;")
          
          div(style="flex: 1; min-width: 200px; margin-bottom: 1rem;")
            h4(style="margin: 0 0 0.5rem 0; color: var(--text-light); font-size: 0.9rem;") Procesado por
            p#saleUser(style="margin: 0; font-weight: 500;")
      
      div(style="margin-top: 1.5rem;")
        h4(style="margin: 0 0 1rem 0; color: var(--primary); font-size: 1.1rem; font-weight: 500; border-bottom: 1px solid rgba(0,0,0,0.1); padding-bottom: 0.5rem;") Productos
        ul#saleItems(style="list-style: none; padding: 0; margin: 0;")

  script.
    // Initialize page
    document.addEventListener('DOMContentLoaded', function() {
      // Set up filter functionality
      document.getElementById('applyFilter').addEventListener('click', filterSales);
      document.getElementById('resetFilter').addEventListener('click', resetFilters);
      
      // Sort sales by date (newest first)
      sortSalesByDate();
    });
    
    // Sort sales by date (newest first)
    function sortSalesByDate() {
      const table = document.getElementById('salesTable');
      if (!table) return;
      
      const tbody = table.querySelector('tbody');
      if (!tbody) return;
      
      const rows = Array.from(tbody.querySelectorAll('tr'));
      
      // Skip if there's only one row with "No hay ventas registradas"
      if (rows.length === 1 && rows[0].querySelector('td').colSpan === 6) {
        return;
      }
      
      // Sort by date (column index 1)
      rows.sort((a, b) => {
        const aDate = new Date(a.cells[1].textContent);
        const bDate = new Date(b.cells[1].textContent);
        return bDate - aDate; // Newest first
      });
      
      // Clear the table
      while (tbody.firstChild) {
        tbody.removeChild(tbody.firstChild);
      }
      
      // Add sorted rows back to the table
      rows.forEach(row => tbody.appendChild(row));
    }
    
    // Filter sales based on criteria
    function filterSales() {
      const dateFrom = document.getElementById('dateFrom').value;
      const dateTo = document.getElementById('dateTo').value;
      const channel = document.getElementById('channelFilter').value;
      
      const rows = document.querySelectorAll('#salesTable tbody tr');
      
      rows.forEach(row => {
        // Skip the "No hay ventas registradas" row
        if (row.querySelector('td').colSpan === 6) return;
        
        let show = true;
        const dateCell = row.querySelector('td:nth-child(2)').textContent;
        const channelCell = row.querySelector('td:nth-child(4)').textContent;
        
        const rowDate = new Date(dateCell);
        
        if (dateFrom && new Date(dateFrom) > rowDate) {
          show = false;
        }
        
        if (dateTo) {
          // Add one day to include the end date
          const endDate = new Date(dateTo);
          endDate.setDate(endDate.getDate() + 1);
          if (endDate < rowDate) {
            show = false;
          }
        }
        
        if (channel && channelCell !== channel) {
          show = false;
        }
        
        row.style.display = show ? '' : 'none';
      });
    }
    
    // Reset all filters
    function resetFilters() {
      document.getElementById('dateFrom').value = '';
      document.getElementById('dateTo').value = '';
      document.getElementById('channelFilter').value = '';
      
      const rows = document.querySelectorAll('#salesTable tbody tr');
      rows.forEach(row => {
        row.style.display = '';
      });
    }
    
    // Modal functionality
    const modal = document.getElementById('saleModal');
    const closeBtn = document.querySelector('.close-btn');
    
    // Close modal when clicking the X
    if (closeBtn) {
      closeBtn.onclick = function() {
        modal.style.display = 'none';
      }
    }
    
    // Close modal when clicking outside
    window.onclick = function(event) {
      if (event.target == modal) {
        modal.style.display = 'none';
      }
    }
    
    // View sale details
    function viewSaleDetails(saleId) {
      // In a real app, you would fetch the sale details from the server
      // For now, we'll find it in the existing sales data
      const sales = !{JSON.stringify(sales || [])};
      const sale = sales.find(s => s.id === saleId);
      
      if (sale) {
        document.getElementById('saleId').textContent = sale.id;
        document.getElementById('saleDate').textContent = sale.date ? new Date(sale.date).toLocaleString() : 'N/A';
        document.getElementById('saleTotal').textContent = sale.total ? `$${sale.total.toFixed(2)}` : '$0.00';
        document.getElementById('saleChannel').textContent = sale.channel || 'N/A';
        document.getElementById('saleClient').textContent = sale.clientName || sale.clientId || 'Sin cliente';
        document.getElementById('saleClientEmail').textContent = sale.clientEmail || 'N/A';
        document.getElementById('saleClientPoints').textContent = sale.clientPoints !== undefined ? sale.clientPoints : 'N/A';
        document.getElementById('saleUser').textContent = sale.userEmail || 'N/A';
        
        const itemsList = document.getElementById('saleItems');
        itemsList.innerHTML = '';
        
        if (sale.items && sale.items.length > 0) {
          sale.items.forEach(item => {
            const li = document.createElement('li');
            li.style.display = 'flex';
            li.style.justifyContent = 'space-between';
            li.style.padding = '0.75rem 0';
            li.style.borderBottom = '1px solid rgba(0,0,0,0.05)';
            
            // Use product name if available, otherwise use ID
            const productName = item.productName || item.productId || 'Producto';
            const productType = item.productType || item.type || 'Producto';
            
            li.innerHTML = `
              <div>
                <div style="font-weight: 500;">${productName}</div>
                <div style="color: var(--text-light); font-size: 0.9rem;">
                  ${productType === 'book' ? 'Libro' : 'Café'} - Cantidad: ${item.quantity || 1}
                </div>
              </div>
              <div style="font-weight: 500; color: var(--primary);">$${((item.price || 0) * (item.quantity || 1)).toFixed(2)}</div>
            `;
            itemsList.appendChild(li);
          });
        } else {
          const li = document.createElement('li');
          li.textContent = 'No hay ítems en esta venta.';
          li.style.textAlign = 'center';
          li.style.padding = '1rem 0';
          li.style.color = 'var(--text-light)';
          itemsList.appendChild(li);
        }
        
        modal.style.display = 'block';
      } else {
        alert('No se encontraron detalles para esta venta.');
      }
    }
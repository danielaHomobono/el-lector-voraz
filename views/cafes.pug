extends layout

block scripts
  link(rel="stylesheet", href="/css/cafe.css")
  script(src="/js/cart.js", defer)

block content
  h1 Cafetería
  .page-header
    .search-container
      input(type="text", id="search-input", placeholder="Buscar por nombre o categoría...", aria-label="Buscar productos")
      button(type="button", id="search-button", aria-label="Buscar") 
        | Buscar

  .catalog-container(role="list" aria-label="Productos de cafetería")
    each cafe in cafes
      .book-card(role="listitem")
        .book-image
          //- Cafe product image placeholder
          div.book-cover
        .book-details
          h2= cafe.name
          if cafe.description
            p.book-author 
              em #{cafe.description}
          p.book-category 
            span.label Categoría: 
            span #{cafe.category}
          p.book-price $#{cafe.price}
          - const isLowStock = cafe.stock <= (cafe.lowStockThreshold || 5)
          p.book-stock(class=isLowStock ? 'low-stock' : 'in-stock') 
            span.label Stock: 
            span #{cafe.stock} #{cafe.stockUnit || 'unidades'}
            span.stock-label= isLowStock ? ' (Pocas unidades)' : ' (Disponible)'
          button(
            type="button" 
            class="add-to-cart" 
            data-id=cafe.id 
            data-title=cafe.name 
            data-price=cafe.price
            aria-label=`Agregar ${cafe.name} al carrito`
            disabled=cafe.stock <= 0
          ) #{cafe.stock <= 0 ? 'Sin stock' : 'Agregar al carrito'}

  script.
    // Search functionality
    document.getElementById('search-button').addEventListener('click', function() {
      const searchTerm = document.getElementById('search-input').value.toLowerCase();
      const items = document.querySelectorAll('.book-card');
      
      items.forEach(item => {
        const name = item.querySelector('h2').textContent.toLowerCase();
        const category = item.querySelector('.book-category span:last-child').textContent.toLowerCase();
        
        if (name.includes(searchTerm) || category.includes(searchTerm)) {
          item.style.display = '';
        } else {
          item.style.display = 'none';
        }
      });
    });
    
    // Search on enter key
    document.getElementById('search-input').addEventListener('keyup', function(event) {
      if (event.key === 'Enter') {
        document.getElementById('search-button').click();
      }
    });
    
    // Add cafe product image placeholders
    document.querySelectorAll('.book-cover').forEach((cover, index) => {
      // Generate colors for cafe products
      const colors = [
        '#ddbc95', // accent
        '#b38867', // secondary
        '#626d71', // primary
        '#cdcdc0', // highlight
      ];
      const color = colors[index % colors.length];
      
      cover.style.backgroundColor = color;
      
      // Add first letter of product name
      const name = cover.closest('.book-card').querySelector('h2').textContent;
      const letter = document.createElement('span');
      letter.textContent = name.charAt(0);
      letter.className = 'cover-letter';
      cover.appendChild(letter);
      
      // Add subtle pattern overlay for texture
      const pattern = document.createElement('div');
      pattern.className = 'cover-pattern';
      cover.appendChild(pattern);
    });